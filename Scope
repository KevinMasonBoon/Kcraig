// Programmer: Ke'Vaughn Craig
// Date: November 27, 2018
// Scope class demonstrates field and local variable scopes

public class Scope 
{
	// field that is accessible to all methods
	private static int x = 1;
	
	//method main creates and initializes local variable x
	// and calls methods useLocalVarible and useField
	public static void main( String[] args)
	{
		int x = 5; // method's local variable x shadows field x
		
		System.out.printf( "local x in method begin is %d\n", x );
		
		useLocalVariable(); // useLocalVaraible has local x
		useField(); // useField uses class Scope's field x 
		useLocalVariable(); // useLocalVariable reinitializes local x 
		useField(); // class Scopes field x retains its value 
		
		System.out.printf("\nlocal x in method begin is %d\n", x );
	} // end method begin
	public static void useLocalVariable()
	{
		int x = 25; // initialized each time userLocalVarible is called
		
		System.out.printf(
				"\nlocal x on entering method useLocalVariable is %d\n", x );
		++x; // modifies this method's local variable x
		System.out.printf(
				"local x before exiting method useLocalVariable is %d\n", x);
	}// end method useLocalVariable
	
	// modify class Scope's field x during each call
	public static void useField()
	{
		System.out.printf(
				"\nfield x on entering mehtod useField is %d\n", x);
		x *= 10; // modifies class Scope's field x
		System.out.printf(
				"field x before exiting method useField is %d\n", x);
	}// end method
}// end class Scope
